{"version":3,"file":"index.js","sources":["../../src/libs/firebase.ts"],"sourcesContent":["import { getApps, initializeApp, applicationDefault, App } from \"firebase-admin/app\";\r\nimport { Auth, getAuth, CreateRequest, UpdateRequest, UserRecord } from \"firebase-admin/auth\";\r\n\r\nexport default class Firebase {\r\n    private auth: Auth;\r\n    \r\n    constructor(){   \r\n        let app: App;\r\n        const apps = getApps();\r\n        \r\n        if(apps.length === 0){\r\n            app = initializeApp({ \r\n                credential: applicationDefault(),\r\n                projectId: process.env.PROJECT_ID \r\n            });\r\n        } else {\r\n           app = apps[0];\r\n        }\r\n\r\n        this.auth = getAuth(app);\r\n    }\r\n    \r\n    verifyToken(token: string) : Promise<string>{\r\n        return new Promise((resolve, reject) => {\r\n            this.auth.verifyIdToken(token)\r\n                .then(decodeToken => {\r\n                    resolve(decodeToken.uid);\r\n                })\r\n                .catch(error => {\r\n                    reject(error);\r\n                })\r\n        });\r\n    }\r\n\r\n    createUser(data: CreateRequest) : Promise<object>{\r\n        return new Promise((resolve, reject) => {\r\n            this.auth.createUser(data)\r\n                .then(record => resolve(record.toJSON()))\r\n                .catch(error => reject(error))\r\n        });\r\n    }\r\n\r\n    deleteUser(uid: string) : Promise<boolean> {\r\n        return new Promise((resolve, reject) => {\r\n            this.auth.deleteUser(uid)\r\n                .then(() => resolve(true))\r\n                .catch(error => reject(error))\r\n        });\r\n    }\r\n\r\n    deleteUsers(uids: string[]) : Promise<boolean>{\r\n        return new Promise((resolve, reject) => {\r\n            this.auth.deleteUsers(uids)\r\n                .then(() => resolve(true))\r\n                .catch(error => reject(error))\r\n        });\r\n    }\r\n\r\n    getUser(uid: string) : Promise<UserRecord>{\r\n        return new Promise((resolve, reject) => {\r\n            this.auth.getUser(uid)\r\n                .then(record => resolve(record))\r\n                .catch(error => reject(error))\r\n        });\r\n    }\r\n\r\n    getUserByEmail(email: string) : Promise<UserRecord>{\r\n        return new Promise((resolve, reject) => {\r\n            this.auth.getUserByEmail(email)\r\n                .then(record => resolve(record))\r\n                .catch(error => reject(error))\r\n        });\r\n    }\r\n\r\n    getUsers(uids: string[] = []) : Promise<UserRecord[]>{\r\n        return new Promise((resolve, reject) => {\r\n            this.auth.getUsers(uids.map(uid => {return {uid: uid}}))\r\n                .then(results => resolve(results.users))\r\n                .catch(error => reject(error))\r\n        })\r\n    }\r\n\r\n    getAllUsers(nextPageToken: string): Promise<UserRecord[]>{\r\n        return new Promise((resolve, reject) => {\r\n            let users: UserRecord[] = [];\r\n            \r\n            this.auth.listUsers(1000, nextPageToken)\r\n                .then(results => {\r\n                    users = users.concat(results.users);\r\n                    \r\n                    if(results.pageToken){\r\n                        this.getAllUsers(results.pageToken)\r\n                            .then((usersList) => users.concat(usersList))\r\n                            .catch(error => reject(error))\r\n                    }\r\n\r\n                    resolve(users);\r\n                })\r\n                .catch(error => reject(error))\r\n        });\r\n    }\r\n\r\n    updateUser(uid: string, data: UpdateRequest): Promise<UserRecord>{\r\n        return new Promise((resolve, reject) => {\r\n            this.auth.updateUser(uid, data)\r\n                .then(record => resolve(record))\r\n                .catch(error => reject(error))\r\n        });\r\n    }\r\n}"],"names":[],"mappings":"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"}